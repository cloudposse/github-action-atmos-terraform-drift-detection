name: 'GitHub Action Atmos Terraform Drift Detection'
description: 'GitHub Action Atmos Terraform Drift Detection'
author: hello@cloudposse.com
branding:
  icon: 'server'
  color: 'white'
inputs:
  issue_labels:
    description: "Comma separated list of labels to add to the drift issues. Default: drift"
    default: 'drift'
    required: false
  debug:
    description: "Enable action debug mode. Default: false"
    default: 'false'
    required: false
  token:
    description:
      Used to pull node distributions for Atmos from Cloud Posse's GitHub repository. Since there's a default, this is typically
      not supplied by the user. When running this action on github.com, the default value is sufficient. When running on
      GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    default: ${{ github.server_url == 'https://github.com' && github.token || '' }}

runs:
  using: "composite"
  steps:
    - name: Debug
      shell: bash
      run: |
        ls -l $GITHUB_WORKSPACE/github-issues-summaries/

    # - name: Lookup Issue by Title
    #   id: lookup-issue
    #   uses: actions/github-script@v6
    #   with:
    #     github-token: ${{ inputs.token }}
    #     script: |
    #       const title = "Drift Detected in `${{ inputs.stack }}-${{ inputs.component }}`";
    #       const owner = "${{ github.repository_owner }}";
    #       const repo = "${{ github.event.repository.name }}";
    #       const issues = await github.rest.search.issuesAndPullRequests({
    #         q: `repo:${owner}/${repo} is:issue state:open in:title ${title}`
    #       });

    #       let issueNumber = -1

    #       if (issues.data.total_count > 0) {
    #         issueNumber = issues.data.items[0].number;
    #         console.log(`Found issue: ${issueNumber}`);

    #         const issue = await github.rest.issues.get({
    #           owner: owner,
    #           repo: repo,
    #           issue_number: issueNumber,
    #         });
    #       } else {
    #         console.log("Issue not found.");
    #       }

    #       core.setOutput('issue_number', issueNumber);

    # - name: Create Issue
    #   id: create_issue
    #   uses: actions/github-script@v6
    #   if: >-
    #     ${{ 
    #       fromJSON(steps.atmos-plan.outputs.has-changes) &&
    #       steps.lookup-issue.outputs.issue_number == '-1'
    #     }}
    #   with:
    #     github-token: ${{ inputs.token }}
    #     script: |
    #       const fs = require('fs');

    #       const title = "Drift Detected in `${{ inputs.stack }}-${{ inputs.component }}`";
    #       const body = fs.readFileSync("${{ github.action_path }}/output.md", 'utf8');
    #       const owner = "${{ github.repository_owner }}";
    #       const repo = "${{ github.event.repository.name }}";
    #       const issue_labels = "${{ inputs.issue_labels }}"
    #       const labels = issue_labels.split(",").map(item => item.trim()).filter(item => item != null && item !== "");
    #       const newIssue = await github.rest.issues.create({
    #         owner: owner,
    #         repo: repo,
    #         title: title,
    #         body: body,
    #         labels: labels
    #       });
    #       const issueNumber = newIssue.data.number;

    #       console.log(`Created new issue with number: ${issueNumber}`);

    # - name: Update Issue
    #   id: update_issue
    #   uses: actions/github-script@v6
    #   if: >-
    #     ${{ 
    #       fromJSON(steps.atmos-plan.outputs.has-changes) &&
    #       steps.lookup-issue.outputs.issue_number != '-1'
    #     }}
    #   with:
    #     github-token: ${{ inputs.token }}
    #     script: |
    #       const fs = require('fs');

    #       let issueNumber = '${{steps.lookup-issue.outputs.issue_number}}';
    #       const title = "Drift Detected in `${{ inputs.stack }}-${{ inputs.component }}`";
    #       const body = fs.readFileSync("${{ github.action_path }}/output.md", 'utf8');
    #       const owner = "${{ github.repository_owner }}";
    #       const repo = "${{ github.event.repository.name }}";

    #       await github.rest.issues.update({
    #         owner: owner,
    #         repo: repo,
    #         issue_number: issueNumber,
    #         body: body
    #       });

    #       console.log(`Updated issue: ${issueNumber}`);